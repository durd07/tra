// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: proto/tra.proto

package tra

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TraServiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *anypb.Any `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *TraServiceRequest) Reset() {
	*x = TraServiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraServiceRequest) ProtoMessage() {}

func (x *TraServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraServiceRequest.ProtoReflect.Descriptor instead.
func (*TraServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{0}
}

func (x *TraServiceRequest) GetRequest() *anypb.Any {
	if x != nil {
		return x.Request
	}
	return nil
}

type TraServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      int32      `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Reason   string     `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Response *anypb.Any `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *TraServiceResponse) Reset() {
	*x = TraServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraServiceResponse) ProtoMessage() {}

func (x *TraServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraServiceResponse.ProtoReflect.Descriptor instead.
func (*TraServiceResponse) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{1}
}

func (x *TraServiceResponse) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *TraServiceResponse) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *TraServiceResponse) GetResponse() *anypb.Any {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateLskpmcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lskpmc *Lskpmc `protobuf:"bytes,1,opt,name=lskpmc,proto3" json:"lskpmc,omitempty"`
}

func (x *CreateLskpmcRequest) Reset() {
	*x = CreateLskpmcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLskpmcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLskpmcRequest) ProtoMessage() {}

func (x *CreateLskpmcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLskpmcRequest.ProtoReflect.Descriptor instead.
func (*CreateLskpmcRequest) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLskpmcRequest) GetLskpmc() *Lskpmc {
	if x != nil {
		return x.Lskpmc
	}
	return nil
}

type CreateLskpmcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateLskpmcResponse) Reset() {
	*x = CreateLskpmcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLskpmcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLskpmcResponse) ProtoMessage() {}

func (x *CreateLskpmcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLskpmcResponse.ProtoReflect.Descriptor instead.
func (*CreateLskpmcResponse) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{3}
}

type UpdateLskpmcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lskpmc *Lskpmc `protobuf:"bytes,1,opt,name=lskpmc,proto3" json:"lskpmc,omitempty"`
}

func (x *UpdateLskpmcRequest) Reset() {
	*x = UpdateLskpmcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLskpmcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLskpmcRequest) ProtoMessage() {}

func (x *UpdateLskpmcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLskpmcRequest.ProtoReflect.Descriptor instead.
func (*UpdateLskpmcRequest) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLskpmcRequest) GetLskpmc() *Lskpmc {
	if x != nil {
		return x.Lskpmc
	}
	return nil
}

type UpdateLskpmcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLskpmcResponse) Reset() {
	*x = UpdateLskpmcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLskpmcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLskpmcResponse) ProtoMessage() {}

func (x *UpdateLskpmcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLskpmcResponse.ProtoReflect.Descriptor instead.
func (*UpdateLskpmcResponse) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{5}
}

type RetrieveLskpmcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lskpmc string `protobuf:"bytes,1,opt,name=lskpmc,proto3" json:"lskpmc,omitempty"`
}

func (x *RetrieveLskpmcRequest) Reset() {
	*x = RetrieveLskpmcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLskpmcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLskpmcRequest) ProtoMessage() {}

func (x *RetrieveLskpmcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLskpmcRequest.ProtoReflect.Descriptor instead.
func (*RetrieveLskpmcRequest) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{6}
}

func (x *RetrieveLskpmcRequest) GetLskpmc() string {
	if x != nil {
		return x.Lskpmc
	}
	return ""
}

type RetrieveLskpmcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lskpmc *Lskpmc `protobuf:"bytes,1,opt,name=lskpmc,proto3" json:"lskpmc,omitempty"`
}

func (x *RetrieveLskpmcResponse) Reset() {
	*x = RetrieveLskpmcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveLskpmcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveLskpmcResponse) ProtoMessage() {}

func (x *RetrieveLskpmcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveLskpmcResponse.ProtoReflect.Descriptor instead.
func (*RetrieveLskpmcResponse) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveLskpmcResponse) GetLskpmc() *Lskpmc {
	if x != nil {
		return x.Lskpmc
	}
	return nil
}

type DeleteLskpmcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lskpmc string `protobuf:"bytes,1,opt,name=lskpmc,proto3" json:"lskpmc,omitempty"`
}

func (x *DeleteLskpmcRequest) Reset() {
	*x = DeleteLskpmcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLskpmcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLskpmcRequest) ProtoMessage() {}

func (x *DeleteLskpmcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLskpmcRequest.ProtoReflect.Descriptor instead.
func (*DeleteLskpmcRequest) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteLskpmcRequest) GetLskpmc() string {
	if x != nil {
		return x.Lskpmc
	}
	return ""
}

type DeleteLskpmcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLskpmcResponse) Reset() {
	*x = DeleteLskpmcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLskpmcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLskpmcResponse) ProtoMessage() {}

func (x *DeleteLskpmcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLskpmcResponse.ProtoReflect.Descriptor instead.
func (*DeleteLskpmcResponse) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{9}
}

type SubscribeLskpmcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeLskpmcRequest) Reset() {
	*x = SubscribeLskpmcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeLskpmcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeLskpmcRequest) ProtoMessage() {}

func (x *SubscribeLskpmcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeLskpmcRequest.ProtoReflect.Descriptor instead.
func (*SubscribeLskpmcRequest) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{10}
}

type SubscribeLskpmcResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lskpmcs []*Lskpmc `protobuf:"bytes,1,rep,name=lskpmcs,proto3" json:"lskpmcs,omitempty"`
}

func (x *SubscribeLskpmcResponse) Reset() {
	*x = SubscribeLskpmcResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeLskpmcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeLskpmcResponse) ProtoMessage() {}

func (x *SubscribeLskpmcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeLskpmcResponse.ProtoReflect.Descriptor instead.
func (*SubscribeLskpmcResponse) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{11}
}

func (x *SubscribeLskpmcResponse) GetLskpmcs() []*Lskpmc {
	if x != nil {
		return x.Lskpmcs
	}
	return nil
}

type Lskpmc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *Lskpmc) Reset() {
	*x = Lskpmc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tra_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lskpmc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lskpmc) ProtoMessage() {}

func (x *Lskpmc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tra_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lskpmc.ProtoReflect.Descriptor instead.
func (*Lskpmc) Descriptor() ([]byte, []int) {
	return file_proto_tra_proto_rawDescGZIP(), []int{12}
}

func (x *Lskpmc) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Lskpmc) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

var File_proto_tra_proto protoreflect.FileDescriptor

var file_proto_tra_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x72, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x31, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72,
	0x61, 0x2e, 0x76, 0x33, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x43, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x70, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a,
	0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76,
	0x33, 0x2e, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63,
	0x22, 0x16, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x68, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x06, 0x6c, 0x73, 0x6b, 0x70,
	0x6d, 0x63, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x73, 0x6b, 0x70,
	0x6d, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x22, 0x6b, 0x0a, 0x16, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63,
	0x52, 0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x18, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x73, 0x6b, 0x70,
	0x6d, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x17, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x33, 0x2e, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63,
	0x52, 0x07, 0x6c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x73, 0x22, 0x2c, 0x0a, 0x06, 0x4c, 0x73, 0x6b,
	0x70, 0x6d, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x32, 0xb3, 0x06, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9d, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x12, 0x44, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76,
	0x33, 0x2e, 0x54, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x12, 0x44, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x45, 0x2e,
	0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76,
	0x33, 0x2e, 0x54, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9f, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x12, 0x44, 0x2e, 0x65, 0x6e, 0x76, 0x6f,
	0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x45, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9d, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x12, 0x44, 0x2e, 0x65, 0x6e, 0x76, 0x6f,
	0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70,
	0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x45, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61,
	0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2, 0x01, 0x0a, 0x0f, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4c, 0x73, 0x6b, 0x70, 0x6d, 0x63, 0x12, 0x44, 0x2e, 0x65,
	0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x33,
	0x2e, 0x54, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x45, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x74, 0x72, 0x61, 0x2e, 0x76, 0x33, 0x2e, 0x54, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x64, 0x0a,
	0x3f, 0x69, 0x6f, 0x2e, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x65,
	0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x73, 0x69, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x74, 0x72, 0x61, 0x2e, 0x76, 0x33,
	0x42, 0x08, 0x54, 0x72, 0x61, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x15, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x75, 0x72, 0x64, 0x30, 0x37, 0x2f,
	0x74, 0x72, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_tra_proto_rawDescOnce sync.Once
	file_proto_tra_proto_rawDescData = file_proto_tra_proto_rawDesc
)

func file_proto_tra_proto_rawDescGZIP() []byte {
	file_proto_tra_proto_rawDescOnce.Do(func() {
		file_proto_tra_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tra_proto_rawDescData)
	})
	return file_proto_tra_proto_rawDescData
}

var file_proto_tra_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_tra_proto_goTypes = []interface{}{
	(*TraServiceRequest)(nil),       // 0: envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceRequest
	(*TraServiceResponse)(nil),      // 1: envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceResponse
	(*CreateLskpmcRequest)(nil),     // 2: envoy.extensions.filters.network.sip_proxy.tra.v3.CreateLskpmcRequest
	(*CreateLskpmcResponse)(nil),    // 3: envoy.extensions.filters.network.sip_proxy.tra.v3.CreateLskpmcResponse
	(*UpdateLskpmcRequest)(nil),     // 4: envoy.extensions.filters.network.sip_proxy.tra.v3.UpdateLskpmcRequest
	(*UpdateLskpmcResponse)(nil),    // 5: envoy.extensions.filters.network.sip_proxy.tra.v3.UpdateLskpmcResponse
	(*RetrieveLskpmcRequest)(nil),   // 6: envoy.extensions.filters.network.sip_proxy.tra.v3.RetrieveLskpmcRequest
	(*RetrieveLskpmcResponse)(nil),  // 7: envoy.extensions.filters.network.sip_proxy.tra.v3.RetrieveLskpmcResponse
	(*DeleteLskpmcRequest)(nil),     // 8: envoy.extensions.filters.network.sip_proxy.tra.v3.DeleteLskpmcRequest
	(*DeleteLskpmcResponse)(nil),    // 9: envoy.extensions.filters.network.sip_proxy.tra.v3.DeleteLskpmcResponse
	(*SubscribeLskpmcRequest)(nil),  // 10: envoy.extensions.filters.network.sip_proxy.tra.v3.SubscribeLskpmcRequest
	(*SubscribeLskpmcResponse)(nil), // 11: envoy.extensions.filters.network.sip_proxy.tra.v3.SubscribeLskpmcResponse
	(*Lskpmc)(nil),                  // 12: envoy.extensions.filters.network.sip_proxy.tra.v3.Lskpmc
	(*anypb.Any)(nil),               // 13: google.protobuf.Any
}
var file_proto_tra_proto_depIdxs = []int32{
	13, // 0: envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceRequest.request:type_name -> google.protobuf.Any
	13, // 1: envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceResponse.response:type_name -> google.protobuf.Any
	12, // 2: envoy.extensions.filters.network.sip_proxy.tra.v3.CreateLskpmcRequest.lskpmc:type_name -> envoy.extensions.filters.network.sip_proxy.tra.v3.Lskpmc
	12, // 3: envoy.extensions.filters.network.sip_proxy.tra.v3.UpdateLskpmcRequest.lskpmc:type_name -> envoy.extensions.filters.network.sip_proxy.tra.v3.Lskpmc
	12, // 4: envoy.extensions.filters.network.sip_proxy.tra.v3.RetrieveLskpmcResponse.lskpmc:type_name -> envoy.extensions.filters.network.sip_proxy.tra.v3.Lskpmc
	12, // 5: envoy.extensions.filters.network.sip_proxy.tra.v3.SubscribeLskpmcResponse.lskpmcs:type_name -> envoy.extensions.filters.network.sip_proxy.tra.v3.Lskpmc
	0,  // 6: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.CreateLskpmc:input_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceRequest
	0,  // 7: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.UpdateLskpmc:input_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceRequest
	0,  // 8: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.RetrieveLskpmc:input_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceRequest
	0,  // 9: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.DeleteLskpmc:input_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceRequest
	0,  // 10: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.SubscribeLskpmc:input_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceRequest
	1,  // 11: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.CreateLskpmc:output_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceResponse
	1,  // 12: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.UpdateLskpmc:output_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceResponse
	1,  // 13: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.RetrieveLskpmc:output_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceResponse
	1,  // 14: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.DeleteLskpmc:output_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceResponse
	1,  // 15: envoy.extensions.filters.network.sip_proxy.tra.v3.TraService.SubscribeLskpmc:output_type -> envoy.extensions.filters.network.sip_proxy.tra.v3.TraServiceResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_tra_proto_init() }
func file_proto_tra_proto_init() {
	if File_proto_tra_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tra_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraServiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLskpmcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLskpmcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLskpmcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLskpmcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLskpmcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveLskpmcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLskpmcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLskpmcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeLskpmcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeLskpmcResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_tra_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lskpmc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tra_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_tra_proto_goTypes,
		DependencyIndexes: file_proto_tra_proto_depIdxs,
		MessageInfos:      file_proto_tra_proto_msgTypes,
	}.Build()
	File_proto_tra_proto = out.File
	file_proto_tra_proto_rawDesc = nil
	file_proto_tra_proto_goTypes = nil
	file_proto_tra_proto_depIdxs = nil
}
